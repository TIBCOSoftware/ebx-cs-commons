/* Copyright Â© 2024. Cloud Software Group, Inc. This file is subject to the license terms contained in the license file that is distributed with this file. */
/**
* This class has been automatically generated by ebx-cs-commons 2.0.12-SNAPSHOT
*/
package com.tibco.ebx.cs.commons.beans.generator.generated.bean;

import com.tibco.ebx.cs.commons.beans.generator.template.TableBean;
import java.util.Objects;
import com.tibco.ebx.cs.commons.lib.exception.EBXCommonsException;
import com.tibco.ebx.cs.commons.beans.generator.generated.dao.DataTransferObjectDAO;
import com.tibco.ebx.cs.commons.beans.generator.generated.dao.ServiceDAO;

/**
* Java Bean of type TableBean automatically generated by service 'Generate Java Accessers' of EBX Commons
* It represents node at path /root/Service in data model urn:ebx:module:ebx-cs-commons:/WEB-INF/ebx/schemas/DataModels.xsd.
*
* @author EBX Commons
*/
public class Service extends TableBean {

	private Integer identifier;
	private DataTransferObject dataTransferObject;
	private String javaPackage;
	private String javaClassName;
	private Boolean generationActive;

	/**
	* Default constructor
	*/
	public Service(){
	}

	public Integer getIdentifier(){
		return this.identifier;
	}

	public void setIdentifier(final Integer identifier){
		this.identifier = identifier;
	}

	public DataTransferObject getDataTransferObject() throws EBXCommonsException {
		if(this.dataTransferObject == null && isBoundToEBX()){
			this.dataTransferObject = DataTransferObjectDAO.getInstance().read(this, ServiceDAO.path_to_field_dataTransferObject).orElse(null);
		}
		return this.dataTransferObject;
	}

	public void setDataTransferObject(final DataTransferObject dataTransferObject){
		this.dataTransferObject = dataTransferObject;
	}

	public String getJavaPackage(){
		return this.javaPackage;
	}

	public void setJavaPackage(final String javaPackage){
		this.overwrite(this.getDAO().path_to_field_javaPackage);
		this.javaPackage = javaPackage;
	}

	public String getJavaClassName(){
		return this.javaClassName;
	}

	public void setJavaClassName(final String javaClassName){
		this.javaClassName = javaClassName;
	}

	public Boolean getGenerationActive(){
		return this.generationActive;
	}

	public void setGenerationActive(final Boolean generationActive){
		this.generationActive = generationActive;
	}

	@Override
	protected ServiceDAO getDAO() {
		return ServiceDAO.getInstance();
	}

	@Override
	public int hashCode() {
		return Objects.hash(identifier,dataTransferObject,javaPackage,javaClassName,generationActive);
	}

	@Override
	public boolean equals(final Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof Service)) {
			return false;
		}
		Service other = ( Service) obj;
		return Objects.equals(identifier, other.identifier)
			 && Objects.equals(dataTransferObject, other.dataTransferObject)
			 && Objects.equals(javaPackage, other.javaPackage)
			 && Objects.equals(javaClassName, other.javaClassName)
			 && Objects.equals(generationActive, other.generationActive);
	}
}