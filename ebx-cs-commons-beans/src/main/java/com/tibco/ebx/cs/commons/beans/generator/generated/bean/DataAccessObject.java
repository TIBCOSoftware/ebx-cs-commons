/* Copyright Â© 2024. Cloud Software Group, Inc. This file is subject to the license terms contained in the license file that is distributed with this file. */
/**
* This class has been automatically generated by ebx-cs-commons 2.0.12-SNAPSHOT
*/
package com.tibco.ebx.cs.commons.beans.generator.generated.bean;

import java.util.Objects;

import com.tibco.ebx.cs.commons.beans.generator.generated.dao.DataAccessObjectDAO;
import com.tibco.ebx.cs.commons.beans.generator.generated.dao.JavaBeanDAO;
import com.tibco.ebx.cs.commons.beans.generator.generated.dao.ModelTableDAO;
import com.tibco.ebx.cs.commons.beans.generator.template.TableBean;
import com.tibco.ebx.cs.commons.lib.exception.EBXCommonsException;

/**
 * Java Bean of type TableBean automatically generated by service 'Generate Java Accessers' of EBX Commons It represents node at path /root/DataAccessObject in data model
 * urn:ebx:module:ebx-cs-commons:/WEB-INF/ebx/schemas/DataModels.xsd.
 *
 * @author EBX Commons
 */
public class DataAccessObject extends TableBean {

	private Integer identifier;
	private Table table;
	private JavaBean javaBean;
	private String javaPackage;
	private String javaClassName;
	private Boolean generationActive;

	/**
	 * Default constructor
	 */
	public DataAccessObject() {
	}

	public Integer getIdentifier() {
		return this.identifier;
	}

	public void setIdentifier(final Integer identifier) {
		this.identifier = identifier;
	}

	public Table getTable() throws EBXCommonsException {
		if (this.table == null && isBoundToEBX()) {
			this.table = ModelTableDAO.getInstance().read(this, DataAccessObjectDAO.path_to_field_table).orElse(null);
		}
		return this.table;
	}

	public void setTable(final Table table) {
		this.table = table;
	}

	public JavaBean getJavaBean() throws EBXCommonsException {
		if (this.javaBean == null && isBoundToEBX()) {
			this.javaBean = JavaBeanDAO.getInstance().read(this, DataAccessObjectDAO.path_to_field_javaBean).orElse(null);
		}
		return this.javaBean;
	}

	public void setJavaBean(final JavaBean javaBean) {
		this.javaBean = javaBean;
	}

	public String getJavaPackage() {
		return this.javaPackage;
	}

	public void setJavaPackage(final String javaPackage) {
		this.getDAO();
		this.overwrite(DataAccessObjectDAO.path_to_field_javaPackage);
		this.javaPackage = javaPackage;
	}

	public String getJavaClassName() {
		return this.javaClassName;
	}

	public void setJavaClassName(final String javaClassName) {
		this.javaClassName = javaClassName;
	}

	public Boolean getGenerationActive() {
		return this.generationActive;
	}

	public void setGenerationActive(final Boolean generationActive) {
		this.generationActive = generationActive;
	}

	@Override
	protected DataAccessObjectDAO getDAO() {
		return DataAccessObjectDAO.getInstance();
	}

	@Override
	public int hashCode() {
		return Objects.hash(identifier, table, javaBean, javaPackage, javaClassName, generationActive);
	}

	@Override
	public boolean equals(final Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof DataAccessObject)) {
			return false;
		}
		DataAccessObject other = (DataAccessObject) obj;
		return Objects.equals(identifier, other.identifier) && Objects.equals(table, other.table) && Objects.equals(javaBean, other.javaBean) && Objects.equals(javaPackage, other.javaPackage)
				&& Objects.equals(javaClassName, other.javaClassName) && Objects.equals(generationActive, other.generationActive);
	}
}