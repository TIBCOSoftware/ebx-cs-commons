/* Copyright Â© 2024. Cloud Software Group, Inc. This file is subject to the license terms contained in the license file that is distributed with this file. */
/**
* This class has been automatically generated by ebx-cs-commons 2.0.12-SNAPSHOT
*/
package com.tibco.ebx.cs.commons.beans.generator.generated.dao;

import com.onwbp.adaptation.Adaptation;
import com.onwbp.adaptation.AdaptationTable;
import com.orchestranetworks.schema.Path;
import com.tibco.ebx.cs.commons.beans.generator.template.DatasetDAO;
import com.orchestranetworks.instance.ValueContext;
import com.orchestranetworks.service.ValueContextForUpdate;
import com.tibco.ebx.cs.commons.beans.generator.generated.bean.DataModels;
import com.tibco.ebx.cs.commons.lib.exception.EBXCommonsException;
import com.orchestranetworks.service.SessionPermissions;
import java.util.Optional;

/**
* Data access object (DA) automatically generated by service 'Generate Java Accessers' of EBX Commons
* It aims to access data and table of any dataset relying on data model urn:ebx:module:ebx-cs-commons:/WEB-INF/ebx/schemas/DataModels.xsd.
*
* @author EBX Commons
*/
public class DataModelsDAO extends DatasetDAO<DataModels>{

	public DataModelsDAO(final Adaptation pDataset) {
		super(pDataset);
	}


	public static final Path path_to_table_rootDataModel = Path.parse("/root/DataModel");
	public static final Path path_to_table_rootTable = Path.parse("/root/Table");
	public static final Path path_to_table_rootField = Path.parse("/root/Field");
	public static final Path path_to_table_rootJavaBean = Path.parse("/root/JavaBean");
	public static final Path path_to_table_rootDataAccessObject = Path.parse("/root/DataAccessObject");
	public static final Path path_to_table_rootDataTransferObject = Path.parse("/root/DataTransferObject");
	public static final Path path_to_table_rootMapper = Path.parse("/root/Mapper");
	public static final Path path_to_table_rootIncludedRelation = Path.parse("/root/IncludedRelation");
	public static final Path path_to_table_rootIgnoredField = Path.parse("/root/IgnoredField");
	public static final Path path_to_table_rootService = Path.parse("/root/Service");
	public static final Path path_to_table_rootRestService = Path.parse("/root/RestService");

	@Override
	protected void setValuesForUpdate(final ValueContextForUpdate pContext, final DataModels pDataModels) throws EBXCommonsException {
	}

	@Override
	protected void getValuesFromAdaptation(final DataModels pDataModels, final Adaptation pRecord, final Optional<SessionPermissions> pPermissions) {
	}

	@Override
	protected void getValuesFromValueContext(final DataModels pDataModels, final ValueContext pContext, Optional<SessionPermissions> pPermissions) {
	}

	@Override
	public DataModels getInstanceOfBean(){
		DataModels instance = new DataModels();
		return instance;
	}

	@Override
	public DataModels getInstanceOfBean(final Adaptation pDataset){
		DataModels instance = new DataModels();
		return instance;
	}

	public AdaptationTable getDataModelTable(){
		return ebxDataset.getTable(path_to_table_rootDataModel);
	}

	public AdaptationTable getTableTable(){
		return ebxDataset.getTable(path_to_table_rootTable);
	}

	public AdaptationTable getFieldTable(){
		return ebxDataset.getTable(path_to_table_rootField);
	}

	public AdaptationTable getJavaBeanTable(){
		return ebxDataset.getTable(path_to_table_rootJavaBean);
	}

	public AdaptationTable getDataAccessObjectTable(){
		return ebxDataset.getTable(path_to_table_rootDataAccessObject);
	}

	public AdaptationTable getDataTransferObjectTable(){
		return ebxDataset.getTable(path_to_table_rootDataTransferObject);
	}

	public AdaptationTable getMapperTable(){
		return ebxDataset.getTable(path_to_table_rootMapper);
	}

	public AdaptationTable getIncludedRelationTable(){
		return ebxDataset.getTable(path_to_table_rootIncludedRelation);
	}

	public AdaptationTable getIgnoredFieldTable(){
		return ebxDataset.getTable(path_to_table_rootIgnoredField);
	}

	public AdaptationTable getServiceTable(){
		return ebxDataset.getTable(path_to_table_rootService);
	}

	public AdaptationTable getRestServiceTable(){
		return ebxDataset.getTable(path_to_table_rootRestService);
	}

}