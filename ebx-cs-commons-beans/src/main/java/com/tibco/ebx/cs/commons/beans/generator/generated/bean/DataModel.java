/**
* This class has been automatically generated by ebx-cs-commons 2.0.12-SNAPSHOT
*/
package com.tibco.ebx.cs.commons.beans.generator.generated.bean;

import java.util.List;
import java.util.Objects;
import java.util.Optional;

import com.tibco.ebx.cs.commons.beans.generator.generated.dao.DataAccessObjectDAO;
import com.tibco.ebx.cs.commons.beans.generator.generated.dao.DataModelDAO;
import com.tibco.ebx.cs.commons.beans.generator.generated.dao.FieldDAO;
import com.tibco.ebx.cs.commons.beans.generator.generated.dao.ModelTableDAO;
import com.tibco.ebx.cs.commons.beans.generator.generated.dao.RestServiceDAO;
import com.tibco.ebx.cs.commons.beans.generator.template.TableBean;
import com.tibco.ebx.cs.commons.lib.exception.EBXCommonsException;

/**
 * Java Bean of type TableBean automatically generated by service 'Generate Java
 * Accessers' of EBX Commons It represents node at path /root/DataModel in data
 * model urn:ebx:module:ebx-cs-commons:/WEB-INF/ebx/schemas/DataModels.xsd.
 *
 * @author EBX Commons
 */
public class DataModel extends TableBean {

	private Integer identifier;
	private String moduleName;
	private String schemaLocation;
	private DataAccessObject daobject;
	private String beansSourceFolder;
	private String daoSourceFolder;
	private String dtoSourceFolder;
	private String mappersSourceFolder;
	private String servicesSourceFolder;
	private String rsSourceFolder;
	private String beansPackage;
	private String daoPackage;
	private String dtoPackage;
	private String mappersPackage;
	private String servicesPackage;
	private String rsPackage;

	/**
	 * Default constructor
	 */
	public DataModel() {
	}

	public Integer getIdentifier() {
		return this.identifier;
	}

	public void setIdentifier(final Integer identifier) {
		this.identifier = identifier;
	}

	public String getModuleName() {
		return this.moduleName;
	}

	public void setModuleName(final String moduleName) {
		this.moduleName = moduleName;
	}

	public String getSchemaLocation() {
		return this.schemaLocation;
	}

	public void setSchemaLocation(final String schemaLocation) {
		this.schemaLocation = schemaLocation;
	}

	public DataAccessObject getDaobject() throws EBXCommonsException {
		if (this.daobject == null && isBoundToEBX()) {
			this.daobject = DataAccessObjectDAO.getInstance().read(this, DataModelDAO.path_to_field_dao).orElse(null);
		}
		return this.daobject;
	}

	public void setDaobject(final DataAccessObject dao) {
		this.daobject = dao;
	}

	public String getBeansSourceFolder() {
		return this.beansSourceFolder;
	}

	public void setBeansSourceFolder(final String beansSourceFolder) {
		this.beansSourceFolder = beansSourceFolder;
	}

	public String getDaoSourceFolder() {
		return this.daoSourceFolder;
	}

	public void setDaoSourceFolder(final String daoSourceFolder) {
		this.daoSourceFolder = daoSourceFolder;
	}

	public String getDtoSourceFolder() {
		return this.dtoSourceFolder;
	}

	public void setDtoSourceFolder(final String dtoSourceFolder) {
		this.dtoSourceFolder = dtoSourceFolder;
	}

	public String getMappersSourceFolder() {
		return this.mappersSourceFolder;
	}

	public void setMappersSourceFolder(final String mappersSourceFolder) {
		this.mappersSourceFolder = mappersSourceFolder;
	}

	public String getServicesSourceFolder() {
		return this.servicesSourceFolder;
	}

	public void setServicesSourceFolder(final String servicesSourceFolder) {
		this.servicesSourceFolder = servicesSourceFolder;
	}

	public String getRsSourceFolder() {
		return this.rsSourceFolder;
	}

	public void setRsSourceFolder(final String rsSourceFolder) {
		this.rsSourceFolder = rsSourceFolder;
	}

	public String getBeansPackage() {
		return this.beansPackage;
	}

	public void setBeansPackage(final String beansPackage) {
		this.beansPackage = beansPackage;
	}

	public String getDaoPackage() {
		return this.daoPackage;
	}

	public void setDaoPackage(final String daoPackage) {
		this.daoPackage = daoPackage;
	}

	public String getDtoPackage() {
		return this.dtoPackage;
	}

	public void setDtoPackage(final String dtoPackage) {
		this.dtoPackage = dtoPackage;
	}

	public String getMappersPackage() {
		return this.mappersPackage;
	}

	public void setMappersPackage(final String mappersPackage) {
		this.mappersPackage = mappersPackage;
	}

	public String getServicesPackage() {
		return this.servicesPackage;
	}

	public void setServicesPackage(final String servicesPackage) {
		this.servicesPackage = servicesPackage;
	}

	public String getRsPackage() {
		return this.rsPackage;
	}

	public void setRsPackage(final String rsPackage) {
		this.rsPackage = rsPackage;
	}

	public List<Table> getTables() {
		return ModelTableDAO.getInstance().readAll(this, DataModelDAO.path_to_field_tables);
	}

	public List<Table> getTables(final String predicate) {
		return ModelTableDAO.getInstance().readAll(this, DataModelDAO.path_to_field_tables, Optional.of(predicate));
	}

	public List<Field> getFields() {
		return FieldDAO.getInstance().readAll(this, DataModelDAO.path_to_field_fields);
	}

	public List<Field> getFields(final String predicate) {
		return FieldDAO.getInstance().readAll(this, DataModelDAO.path_to_field_fields, Optional.of(predicate));
	}

	public List<RestService> getRsServices() {
		return RestServiceDAO.getInstance().readAll(this, DataModelDAO.path_to_field_rsServices);
	}

	public List<RestService> getRsServices(final String predicate) {
		return RestServiceDAO.getInstance().readAll(this, DataModelDAO.path_to_field_rsServices,
				Optional.of(predicate));
	}

	@Override
	protected DataModelDAO getDAO() {
		return DataModelDAO.getInstance();
	}

	@Override
	public int hashCode() {
		return Objects.hash(identifier, moduleName, schemaLocation, daobject, beansSourceFolder, daoSourceFolder,
				dtoSourceFolder, mappersSourceFolder, servicesSourceFolder, rsSourceFolder, beansPackage, daoPackage,
				dtoPackage, mappersPackage, servicesPackage, rsPackage);
	}

	@Override
	public boolean equals(final Object obj) {
		if (this == obj) {
			return true;
		}
		if (obj == null) {
			return false;
		}
		if (!(obj instanceof DataModel)) {
			return false;
		}
		DataModel other = (DataModel) obj;
		return Objects.equals(identifier, other.identifier) && Objects.equals(moduleName, other.moduleName)
				&& Objects.equals(schemaLocation, other.schemaLocation) && Objects.equals(daobject, other.daobject)
				&& Objects.equals(beansSourceFolder, other.beansSourceFolder)
				&& Objects.equals(daoSourceFolder, other.daoSourceFolder)
				&& Objects.equals(dtoSourceFolder, other.dtoSourceFolder)
				&& Objects.equals(mappersSourceFolder, other.mappersSourceFolder)
				&& Objects.equals(servicesSourceFolder, other.servicesSourceFolder)
				&& Objects.equals(rsSourceFolder, other.rsSourceFolder)
				&& Objects.equals(beansPackage, other.beansPackage) && Objects.equals(daoPackage, other.daoPackage)
				&& Objects.equals(dtoPackage, other.dtoPackage) && Objects.equals(mappersPackage, other.mappersPackage)
				&& Objects.equals(servicesPackage, other.servicesPackage) && Objects.equals(rsPackage, other.rsPackage);
	}
}